{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_target",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    }
  ],
  "bytecode": {
    "object": "0x608060405260405160593803806059833981016040819052601e91602a565b806001600160a01b0316ff5b600060208284031215603b57600080fd5b81516001600160a01b0381168114605157600080fd5b939250505056fe",
    "sourceMap": "113:117:13:-:0;;;145:83;;;;;;;;;;;;;;;;;;:::i;:::-;213:7;-1:-1:-1;;;;;200:21:13;;14:298:33;92:6;145:2;133:9;124:7;120:23;116:32;113:52;;;161:1;158;151:12;113:52;187:16;;-1:-1:-1;;;;;232:31:33;;222:42;;212:70;;278:1;275;268:12;212:70;301:5;14:298;-1:-1:-1;;;14:298:33:o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600080fdfea264697066735822122094c534c0ec11a8fb3ab231bd867c1d97ec603e14177a0334d17910d867c70a2464736f6c63430008090033",
    "sourceMap": "113:117:13:-:0;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_target\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/0.8.9/test_helpers/ETHForwarderMock.sol\":\"ETHForwarderMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aragon/=node_modules/@aragon/\",\":@nomiclabs/=node_modules/@nomiclabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@solidity-parser/=node_modules/@solidity-parser/\",\":ens/=node_modules/@aragon/os/contracts/lib/ens/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":gasprofile/=node_modules/gasprofile/\",\":hardhat/=node_modules/hardhat/\",\":math/=node_modules/@aragon/os/contracts/lib/math/\",\":misc/=node_modules/@aragon/os/contracts/lib/misc/\",\":openzeppelin-solidity/=node_modules/openzeppelin-solidity/\",\":sol-explore/=node_modules/sol-explore/\",\":solhint/=node_modules/solhint/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\",\":token/=node_modules/@aragon/os/contracts/lib/token/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/0.8.9/test_helpers/ETHForwarderMock.sol\":{\"keccak256\":\"0xe5f219cf44a06bd9d3c7faf99d58c7f8bc3dd0713f6180fec377ffe7c1a1d8f9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4339df0f26496b15a7ed1efa8fd57b7fd98d6f1c9fdc81687d7aac5b51b83ca0\",\"dweb:/ipfs/QmVanjS9T3r35QvAE7KUjLNwNXu1LDWLPvqQkSYwybksci\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_target",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aragon/=node_modules/@aragon/",
        ":@nomiclabs/=node_modules/@nomiclabs/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@solidity-parser/=node_modules/@solidity-parser/",
        ":ens/=node_modules/@aragon/os/contracts/lib/ens/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":gasprofile/=node_modules/gasprofile/",
        ":hardhat/=node_modules/hardhat/",
        ":math/=node_modules/@aragon/os/contracts/lib/math/",
        ":misc/=node_modules/@aragon/os/contracts/lib/misc/",
        ":openzeppelin-solidity/=node_modules/openzeppelin-solidity/",
        ":sol-explore/=node_modules/sol-explore/",
        ":solhint/=node_modules/solhint/",
        ":solidity-bytes-utils/=node_modules/solidity-bytes-utils/",
        ":token/=node_modules/@aragon/os/contracts/lib/token/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/0.8.9/test_helpers/ETHForwarderMock.sol": "ETHForwarderMock"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/0.8.9/test_helpers/ETHForwarderMock.sol": {
        "keccak256": "0xe5f219cf44a06bd9d3c7faf99d58c7f8bc3dd0713f6180fec377ffe7c1a1d8f9",
        "urls": [
          "bzz-raw://4339df0f26496b15a7ed1efa8fd57b7fd98d6f1c9fdc81687d7aac5b51b83ca0",
          "dweb:/ipfs/QmVanjS9T3r35QvAE7KUjLNwNXu1LDWLPvqQkSYwybksci"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": {}
  },
  "ast": {
    "absolutePath": "contracts/0.8.9/test_helpers/ETHForwarderMock.sol",
    "id": 2692,
    "exportedSymbols": {
      "ETHForwarderMock": [
        2691
      ]
    },
    "nodeType": "SourceUnit",
    "src": "89:142:13",
    "nodes": [
      {
        "id": 2680,
        "nodeType": "PragmaDirective",
        "src": "89:22:13",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 2691,
        "nodeType": "ContractDefinition",
        "src": "113:117:13",
        "nodes": [
          {
            "id": 2690,
            "nodeType": "FunctionDefinition",
            "src": "145:83:13",
            "nodes": [],
            "body": {
              "id": 2689,
              "nodeType": "Block",
              "src": "190:38:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2686,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2682,
                        "src": "213:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2685,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "200:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 2687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "200:21:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2688,
                  "nodeType": "ExpressionStatement",
                  "src": "200:21:13"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2682,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "173:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "157:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "156:25:13"
            },
            "returnParameters": {
              "id": 2684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "190:0:13"
            },
            "scope": 2691,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ETHForwarderMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2691
        ],
        "name": "ETHForwarderMock",
        "nameLocation": "122:16:13",
        "scope": 2692,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 13
}