name: Verify deployed contracts' bytecode

on:
  pull_request:
    branches: [master]

jobs:
  assert-bytecode:
    name: Assert deployed contracts bytecode
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup node.js version
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache yarn cache
        id: cache-yarn-cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install modules
        run: yarn
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Compile contracts
        run: yarn compile

      - name: Verify bytecode
        uses: lidofinance/action-verify-bytecode@master
        with:
          file: artifacts.json

      - name: Check artifacts.json file completeness
        run: |
          shopt -s globstar
          jq -r 'select(.deployedBytecode? | length > 2) | select(.abi? | length > 0) |
              select(.sourceName? | strings | test(env.IGNORE_REGEX) == false) |
              input_filename' artifacts/contracts/**/*.json > _expected
          jq -r '.[] | .artifactPath' artifacts.json > _actual
          cat _actual _expected | sort | uniq -u | tee _diff
          [ -s _diff ] && exit 1 || exit 0
        env:
          IGNORE_REGEX: test|lib|mock|interface|template|OrderedCallback|Pausable|Versioned|BeaconChainDepositor|PausableUntil
        if: ${{ always() }}
