name: CI

on:
  pull_request:
    branches:    
      - 'master'

jobs:
  assert-bytecode:
    name: Assert deployed contracts bytecode
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup node.js version
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

    - name: Cache yarn cache
      id: cache-yarn-cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: yarn-${{ hashFiles('**/yarn.lock') }}

    - name: Cache node_modules
      id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: node_modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: node_modules-${{ hashFiles('**/yarn.lock') }}

    - name: Install modules
      run: yarn
      if: |
        steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
        steps.cache-node-modules.outputs.cache-hit != 'true'
    
    - name: Compile
      run: yarn compile

    - name: Create accounts.json
      run: .github/prepare-accounts-json.py
      env:
          INFURA_PROJECT_ID: ${{ secrets.WEB3_INFURA_PROJECT_ID }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_TOKEN }}

    - name: Check deployed contract bytecode
      run: npx hardhat run .github/assert-deployed-bytecode.js
      env:
          NETWORK_NAME: mainnet
